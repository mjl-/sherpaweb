import * as dom from '../dom';
export declare const success: {
    fg: string;
    bg: string;
    bgHover: string;
    bgActive: string;
    border: string;
    borderHover: string;
    borderActive: string;
};
export declare const danger: {
    fg: string;
    bg: string;
    bgHover: string;
    bgActive: string;
    border: string;
    borderHover: string;
    borderActive: string;
};
export declare const primary: {
    fg: string;
    bg: string;
    bgHover: string;
    bgActive: string;
    border: string;
    borderHover: string;
    borderActive: string;
};
export declare const secondary: {
    fg: string;
    bg: string;
    bgHover: string;
    bgActive: string;
    border: string;
    borderHover: string;
    borderActive: string;
};
export declare const light: {
    fg: string;
    bg: string;
    bgHover: string;
    bgActive: string;
    border: string;
    borderHover: string;
    borderActive: string;
};
export declare class Style {
    readonly sheet: CSSStyleSheet;
    private readonly selectorPrefix;
    readonly className: string;
    readonly propsList: dom.CSSProperties[];
    pseudoStyles: {
        name: string;
        propsList: dom.CSSProperties[];
    }[];
    constructor(sheet: CSSStyleSheet, selectorPrefix: string, className: string, ...styles: (Style | dom.CSSProperties)[]);
    pseudo(pseudo: string, ...propsList: dom.CSSProperties[]): this;
    private add;
}
export declare class Looks {
    private baseClassName;
    uniqueID: string;
    selectorPrefix: string;
    style: HTMLStyleElement;
    header: Style;
    title: Style;
    inlineTitle: Style;
    formInput: Style;
    textarea: Style;
    tableInputSmall: Style;
    searchInput: Style;
    searchInputFiltered: Style;
    searchInputNoresults: Style;
    btnSuccess: Style;
    btnDanger: Style;
    btnPrimary: Style;
    btnSecondary: Style;
    btnLight: Style;
    groupBtnSuccess: Style;
    groupBtnDanger: Style;
    groupBtnPrimary: Style;
    groupBtnSecondary: Style;
    groupBtnLight: Style;
    cell: Style;
    headerCell: Style;
    dayHeaderCell: Style;
    spin: Style;
    box: Style;
    listItem: Style;
    listItemSelected: Style;
    listItemPrimary: Style;
    listItemSecondary: Style;
    listItemSelectedPrimary: Style;
    listItemSelectedSecondary: Style;
    boxPadding: Style;
    boxMargin: Style;
    boxPaddingLast: Style;
    boxMarginLast: Style;
    checkmarkSuccess: Style;
    textWrap: Style;
    alertDanger: Style;
    link: Style;
    constructor(app: dom.Rooter, baseClassName: string);
    create(copy: boolean, className: string, ...styles: (Style | dom.CSSProperties)[]): Style;
    uniqueName(name: string): string;
    addRawRule(rule: string): void;
}
